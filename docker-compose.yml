version: "3"
name: rinhanginx2024q1

services:
  proxy:
    image: nginx:latest
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9999:9999"
    depends_on:
      - api01
      - api02
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "10MB"
  api01: &app
    image: welitonfreitas_rinha_2024q1:latest
    container_name: "api01"
    environment:
      - PG_HOST=rinha-db
      - PG_PORT=5432
      - PG_DB=rinha_db
      - PG_POOL=18
    # links: 
    #   - rinha-db
    ports:
      - "9998:80"
    depends_on:
      - rinha-db
    expose:
      - 5432:5432
    deploy:
      resources:
        limits:
          cpus: "0.4"
          memory: "165MB"
  api02: 
    <<: *app
    container_name: "api02"
    ports:
      - "9997:80"
  
  rinha-db:
    image: postgres:16.2-alpine3.19
    hostname: rinha-db
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=rinha_db
      - POSTGRES_USER=postgres
    ports:
      - "5430:5432"
    volumes:
      - ./config/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./config/postgres.conf:/etc/postgresql/postgresql.conf
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    deploy:
      resources:
        limits:
          # Note que a soma de todos os limites dos serviços
          # aqui declarados é de 1.5 unidades de CPU e 550MB
          # de memória. A distribuição feita aqui é apenas
          # um exemplo – distribua como quiser.
          cpus: "0.5"
          memory: "230MB"
  pgadmin4:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "notilew@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "notilew00"
    ports:
      - "16543:80"
    depends_on:
      - rinha-db

# O uso do modo `bridge` deve ser adequado à carga que será usada no teste.
# A edição anterior se beneficiou do modo host pois o volume de requisições
# era relativamente alto e a virtualização da rede se tornou um gargalo, mas
# este modo é mais complexo de ser configurado. Fique à vontade para usar o
# modo que quiser desde que não conflite com portas trivialmente usadas em um
# SO.
networks:
  default:
    driver: bridge
